import numpy as np
import scipy.linalg as sla
from scipy.sparse import csc_matrix, linalg as spla
import scipy.sparse.linalg as spla

from scipy.fft import ifft, fft
from itertools import accumulate

G = np.array( [[1,0],
               [0,2]])

C = np.array( [[3,-3],
               [-3,3]])


W = np.array( [1,0])

d = np.array( [0,1])

#points = [1+0j, 0+1j, -1+0j, 0-1j]
points = [1, -1]

def gen_points( n):
  return [ np.exp( np.pi*2*k/n*1j) for k in range(n)]

def interpolate( G, C, n):
#  GG = csc_matrix( G)
#  CC = csc_matrix( C)

  Ns = []
  Ds = []
  for s in gen_points( n):
    T = G + C*s
    det2 = sla.det( T)
    lu, piv = sla.lu_factor( T)
    det = np.prod( np.diag( lu))
    X = sla.lu_solve( (lu,piv), W)    
    assert( np.allclose( T.dot(X), W))
    F = d.T.dot(X)
    D = det2
    Ds.append(D)  
    N = F*D
    Ns.append(N)

  numerator_coeffs = fft(Ns) / n
  denominator_coeffs = fft(Ds) / n
  return numerator_coeffs, denominator_coeffs

def roots_by_qz( G, C):
  GG,CC,_,_ = sla.qz(G,C)

  K = 1
  roots = []
  for i in range( GG.shape[0]):
    gg = GG[i,i]
    cc = CC[i,i]
    if np.abs(cc) < 1e-10:
      K *= gg
    else:
      K *= cc
      roots.append( gg/cc)

  return K, roots

def numerator( G, C, W, d):
  n = G.shape[0]
  Ghat = np.block([ [G,                    W.reshape( (n,1))],
                    [-d.T.reshape( (1,n)), np.zeros( (1,1))]])
  Chat = np.block([ [C,                    np.zeros( (n,1))],
                    [np.zeros( (1,n)),     np.zeros( (1,1))]])
  return roots_by_qz( Ghat, Chat)

def denominator( G, C, W, d):
  n = G.shape[0]
  Ghat = np.block([ [G,                    np.zeros( (n,1))],
                    [-d.T.reshape( (1,n)), np.ones( (1,1))]])
  Chat = np.block([ [C,                    np.zeros( (n,1))],
                    [np.zeros( (1,n)),     np.zeros( (1,1))]])
  return roots_by_qz( Ghat, Chat)

print( interpolate( G, C, 2))
print( interpolate( G, C, 3))
print( interpolate( G, C, 4))

print( roots_by_qz( G, C))
print( numerator( G, C, W, d))
print( denominator( G, C, W, d))
